{"version":3,"sources":["Time.js","Navitem.js","Nav.js","Message.js","Chat.js","Groupcontacts.js","Main.js","Newuser.js","Login.js","Approveadd.js","Addcontact.js","Contacts.js","Addgroup.js","App.js","index.js"],"names":["parseTime","timestamp","ampm","toDate","getHours","hoursShift","getMinutes","parseDate","getDate","getMonth","getFullYear","Navitem","props","now","useState","activeChat","setActiveChat","Menu","Item","name","title","onClick","chat","chatID","active","Comment","Group","Avatar","src","Content","Author","as","type","Icon","Metadata","chatTrans","data","length","date","dbFunc","Timestamp","Text","style","height","display","overflow","textOverflow","whiteSpace","marginRight","author","id","user","content","uniqid","require","Nav","position","width","flexDirection","flex","alignItems","alignContent","padding","size","setVisible","marginLeft","Form","flexGrow","Input","transparent","placeholder","secondary","vertical","fluid","marginTop","overflowY","chats","map","undefined","chatsTrans","find","i","chatOther","users","userID","key","Message","Chat","feed","setFeed","useEffect","document","getElementById","scrollIntoView","db","Groupcontacts","contacts","setContacts","selectedContacts","setSelectedContacts","collection","doc","get","then","contactGets","contact","Promise","all","result","open","Modal","Header","icon","iconPosition","onChange","e","List","selection","filter","concat","handleClick","Actions","Button","setGroupContacts","add","groupAddName","update","FieldValue","arrayUnion","forEach","primary","Main","chatTitle","setChatTitle","chatDescription","setChatDescription","activeChatObject","onSubmit","preventDefault","target","reply","value","catch","error","console","Newuser","email","setEmail","setName","password","setPassword","formError","setFormError","errorCode","setErrorCode","errorMessage","setErrorMessage","firebase","createUserWithEmailAndPassword","uid","set","addrequests","merge","setNewUser","code","message","newUserSubmit","Segment","raised","header","color","Login","newUser","loginSubmit","loginError","loginErrorCode","loginErrorMessage","googleLoginSubmit","Approveadd","contactSelect","setContactSelect","addRequests","request","approveAddOpen","ref","setAddRequests","setApproveAddOpen","Addcontact","addContactOpen","setAddContactOpen","log","where","querySnapshot","empty","some","docs","sendRequest","Contacts","privateChatExists","chatGets","j","setOpenContacts","startPrivateChat","Addgroup","group","setGroup","setAddGroup","setGroupAddName","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","setUser","chatIDs","setChatIDs","setUsers","loginOpen","setLoginOpen","setLoginError","openContacts","addGroup","groupContacts","setGroupAddContacts","visible","useReducer","state","action","chatsData","chatsDataUpdate","chatsTransUpdate","userGets","flat","loginDataLoad","userRef","exists","onSnapshot","snapshot","handleUserUpdate","displayName","handleAddRequests","handleChats","handleName","orderBy","resolve","requests","results","Pushable","animation","inverted","Pusher","dimmed","left","signInWithEmailAndPassword","provider","GoogleAuthProvider","signInWithPopup","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2f098d1f.chunk.js","sourcesContent":["const parseTime = (timestamp) => {\r\n  const ampm = timestamp.toDate().getHours() < 12 ? \"AM\" : \"PM\";\r\n  const hoursShift = (timestamp.toDate().getHours() + 12) % 12;\r\n  const hours = hoursShift === 0 ? 12 : hoursShift;\r\n  const minutes =\r\n    timestamp.toDate().getMinutes() < 10\r\n      ? \"0\" + timestamp.toDate().getMinutes()\r\n      : timestamp.toDate().getMinutes();\r\n  return hours + \":\" + minutes + \" \" + ampm;\r\n};\r\n\r\nconst parseDate = (timestamp) => {\r\n  return (\r\n    timestamp.toDate().getDate() +\r\n    \".\" +\r\n    timestamp.toDate().getMonth() +\r\n    \".\" +\r\n    (timestamp.toDate().getFullYear() - 2000)\r\n  );\r\n};\r\n\r\nconst parsePast = (timestamp, now) => {\r\n  const minute = 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n  const timeDiff = now.seconds - timestamp.seconds;\r\n  if (timeDiff < minute) {\r\n    return \"just now\";\r\n  }\r\n  if (timeDiff < minute * 2) {\r\n    return \"1 minute\";\r\n  }\r\n  if (timeDiff < hour) {\r\n    return Math.floor(timeDiff / minute) + \" minutes\";\r\n  }\r\n  if (timeDiff < hour * 2) {\r\n    return \"1 hour\";\r\n  }\r\n  if (timeDiff < day) {\r\n    return Math.floor(timeDiff / hour) + \" hours\";\r\n  }\r\n  return parseDate(timestamp);\r\n};\r\n\r\nconst dayEquality = (timestamp, now) => {\r\n  if (\r\n    timestamp.toDate().getDate() === now.toDate().getDate() &&\r\n    timestamp.toDate().getMonth() === now.toDate().getMonth() &&\r\n    timestamp.toDate().getFullYear() === now.toDate().getFullYear()\r\n  ) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport { parseTime, parseDate, parsePast, dayEquality };\r\n","import React, { useState } from \"react\";\n\nimport { Menu, Comment, Icon } from \"semantic-ui-react\";\n\nimport { parseTime, parseDate, dayEquality } from \"./Time\";\n\nconst Navitem = (props) => {\n  const [activeChat, setActiveChat] = useState(props.activeChat);\n  return (\n    <Menu.Item\n      name={props.title}\n      onClick={() => {\n        props.setActiveChat(props.chat.chatID);\n        setActiveChat(props.chat.chatID);\n      }}\n      active={props.chat.chatID === props.activeChat}\n    >\n      <Comment.Group>\n        <Comment>\n          <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/matt.jpg\" />\n          <Comment.Content>\n            <Comment.Author as=\"a\">\n              {props.chat.type === \"group\" ? <Icon name=\"users\" /> : \"\"}\n              {props.title}\n            </Comment.Author>\n            <Comment.Metadata>\n              {dayEquality(\n                props.chatTrans.data[props.chatTrans.data.length - 1].date,\n                props.dbFunc.Timestamp.now()\n              )\n                ? parseTime(\n                    props.chatTrans.data[props.chatTrans.data.length - 1].date\n                  )\n                : parseDate(\n                    props.chatTrans.data[props.chatTrans.data.length - 1].date\n                  )}\n            </Comment.Metadata>\n            <Comment.Text\n              style={{\n                height: \"16px\",\n              }}\n            >\n              {\" \"}\n              <div\n                style={{\n                  display: \"flex\",\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\",\n                }}\n              >\n                <div style={{ marginRight: \"5px\" }}>\n                  {props.chatTrans.data[props.chatTrans.data.length - 1].author\n                    .id === props.user\n                    ? \"You:\"\n                    : props.chatTrans.data[props.chatTrans.data.length - 1]\n                        .name + \":\"}\n                </div>\n                <div\n                  style={{\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\",\n                    whiteSpace: \"nowrap\",\n                  }}\n                >\n                  {\n                    props.chatTrans.data[props.chatTrans.data.length - 1]\n                      .content\n                  }\n                </div>\n              </div>\n            </Comment.Text>\n          </Comment.Content>\n        </Comment>\n      </Comment.Group>\n    </Menu.Item>\n  );\n};\n\nexport default Navitem;\n","import React from \"react\";\n\nimport { Input, Menu, Form, Icon } from \"semantic-ui-react\";\n\nimport Navitem from \"./Navitem\";\n\nimport \"./Sidebar.css\";\n\nvar uniqid = require(\"uniqid\");\n\nconst Nav = (props) => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1,\n        height: \"100%\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          alignContent: \"center\",\n          padding: \"5px\",\n        }}\n      >\n        <Icon\n          name=\"content\"\n          size=\"large\"\n          onClick={() => {\n            props.setVisible(true);\n          }}\n          style={{\n            marginLeft: \"10px\",\n            marginRight: \"16px\",\n          }}\n        />\n        <Form style={{ flexGrow: \"1\", height: \"38px\" }}>\n          <Input transparent style={{ height: \"38px\" }} placeholder=\"Search\" />\n        </Form>\n      </div>\n      <Menu\n        secondary\n        vertical\n        fluid\n        style={{\n          marginTop: \"0px\",\n          flex: \"1\",\n          overflowY: \"auto\",\n        }}\n      >\n        {props.chats.map((chat) => {\n          if (\n            props.chatsTrans.chats.find((i) => chat.chatID === i.chatID) !==\n            undefined\n          ) {\n            if (chat.type === \"private\") {\n              let chatOther = chat.users.find((i) => i.id !== props.user);\n              let user = props.users.find((i) => i.userID === chatOther.id);\n              if (user !== undefined) {\n                var title = user.name;\n              }\n            } else {\n              var title = chat.title;\n            }\n            return (\n              <Navitem\n                chat={chat}\n                chatTrans={props.chatsTrans.chats.find(\n                  (i) => chat.chatID === i.chatID\n                )}\n                user={props.user}\n                users={props.users}\n                setActiveChat={props.setActiveChat}\n                activeChat={props.activeChat}\n                title={title}\n                key={uniqid()}\n                dbFunc={props.dbFunc}\n              />\n            );\n          }\n        })}\n      </Menu>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport { parseTime } from \"./Time\";\n\nimport { Comment } from \"semantic-ui-react\";\n\nconst Message = (props) => {\n  return (\n    <Comment>\n      <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/matt.jpg\" />\n      <Comment.Content>\n        <Comment.Author as=\"a\">{props.data.name}</Comment.Author>\n        <Comment.Metadata>\n          <div>{parseTime(props.data.date)}</div>\n        </Comment.Metadata>\n        <Comment.Text>\n          {props.data.content === \"\" ? <br /> : props.data.content}\n        </Comment.Text>\n      </Comment.Content>\n    </Comment>\n  );\n};\n\nexport default Message;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Comment } from \"semantic-ui-react\";\n\nimport Message from \"./Message\";\n\nvar uniqid = require(\"uniqid\");\n\nconst Chat = (props) => {\n  const [feed, setFeed] = useState({ chatID: \"\", data: [] });\n  useEffect(() => {\n    if (props.chatsTrans.chats.find((i) => i.chatID === props.activeChat)) {\n      setFeed(\n        props.chatsTrans.chats.find((i) => i.chatID === props.activeChat)\n      );\n    }\n  }, [props.activeChat, props.chatsTrans]);\n  useEffect(() => {\n    document.getElementById(\"chatbottom\").scrollIntoView();\n  });\n  return (\n    <div\n      style={{\n        padding: \"5px\",\n        width: \"100%\",\n      }}\n    >\n      <Comment.Group>\n        {feed.data.map((i) => {\n          return <Message key={uniqid()} data={i} db={props.db} />;\n        })}\n        <div id=\"chatbottom\"></div>\n      </Comment.Group>\n    </div>\n  );\n};\n\nexport default Chat;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Modal, Button, List, Form } from \"semantic-ui-react\";\n\nvar uniqid = require(\"uniqid\");\n\nconst Groupcontacts = (props) => {\n  const [contacts, setContacts] = useState([]);\n  const [selectedContacts, setSelectedContacts] = useState([]);\n  useEffect(() => {\n    if (props.user !== undefined) {\n      props.db\n        .collection(\"users\")\n        .doc(props.user)\n        .get()\n        .then((doc) => {\n          const contactGets = doc\n            .data()\n            .contacts.map((contact) => contact.get());\n          Promise.all(contactGets).then((result) => {\n            setContacts(\n              result.map((contact) => {\n                return { name: contact.data().name, id: contact.id };\n              })\n            );\n          });\n        });\n    }\n  }, [props.open]);\n  const handleClick = (contact) => {\n    if (selectedContacts.find((i) => i.id === contact.id)) {\n      setSelectedContacts(selectedContacts.filter((i) => i.id !== contact.id));\n    } else {\n      setSelectedContacts(selectedContacts.concat(contact));\n    }\n  };\n  const createGroupChat = () => {\n    props.db\n      .collection(\"chats\")\n      .add({\n        title: props.groupAddName,\n        type: \"group\",\n        users: [],\n      })\n      .then((result) => {\n        props.db.collection(result.id).add({\n          name: props.name,\n          author: props.db.doc(\"/users/\" + props.user),\n          date: props.dbFunc.Timestamp.now(),\n          content: \"This is the first message.\",\n        });\n        props.db\n          .collection(\"users\")\n          .doc(props.user)\n          .update({\n            chats: props.dbFunc.FieldValue.arrayUnion(result.id),\n          });\n        props.db\n          .collection(\"chats\")\n          .doc(result.id)\n          .update({\n            users: props.dbFunc.FieldValue.arrayUnion(\n              props.db.doc(\"/users/\" + props.user)\n            ),\n          });\n        selectedContacts.forEach((i) => {\n          props.db\n            .collection(\"chats\")\n            .doc(result.id)\n            .update({\n              users: props.dbFunc.FieldValue.arrayUnion(\n                props.db.doc(\"/users/\" + i.id)\n              ),\n            });\n          props.db\n            .collection(\"users\")\n            .doc(i.id)\n            .update({\n              chats: props.dbFunc.FieldValue.arrayUnion(result.id),\n            });\n        });\n      });\n  };\n  return (\n    <Modal open={props.open} size=\"mini\">\n      <Modal.Header>Add Members:</Modal.Header>\n      <Modal.Content>\n        <Form>\n          {\" \"}\n          <Form.Input\n            fluid\n            icon=\"search\"\n            iconPosition=\"left\"\n            placeholder=\"Search\"\n            onChange={(e) => {}}\n          />\n        </Form>\n        <List selection>\n          {contacts.map((contact) => {\n            return (\n              <List.Item\n                key={uniqid()}\n                active={selectedContacts.find((i) => i.id === contact.id)}\n                onClick={(e) => {\n                  handleClick(contact);\n                }}\n              >\n                {contact.name}\n              </List.Item>\n            );\n          })}\n        </List>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          onClick={() => {\n            props.setGroupContacts(false);\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            createGroupChat(selectedContacts);\n            props.setGroupContacts(false);\n          }}\n          primary\n        >\n          Create\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default Groupcontacts;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Form } from \"semantic-ui-react\";\n\nimport Chat from \"./Chat\";\nimport Groupcontacts from \"./Groupcontacts\";\n\nconst Main = (props) => {\n  const [chatTitle, setChatTitle] = useState(\" \");\n  const [chatDescription, setChatDescription] = useState();\n  const handleSend = (e) => {\n    e.preventDefault();\n    props.db\n      .collection(props.activeChat)\n      .add({\n        name: props.name,\n        author: props.db.doc(\"/users/\" + props.user),\n        date: props.dbFunc.Timestamp.now(),\n        content: e.target.reply.value,\n      })\n      .catch(function (error) {\n        console.error(\"Error adding document: \", error);\n      })\n      .then(() => {\n        e.target.reply.value = \"\";\n      });\n  };\n  const popUpContactAdd = () => {};\n  useEffect(() => {\n    const activeChatObject = props.chats.find(\n      (i) => i.chatID === props.activeChat\n    );\n    if (activeChatObject !== undefined) {\n      switch (activeChatObject.type) {\n        case \"private\":\n          let chatOther = activeChatObject.users.find(\n            (i) => i.id !== props.user\n          );\n          if (\n            props.users.find((i) => i.userID === chatOther.id) !== undefined\n          ) {\n            setChatTitle(\n              props.users.find((i) => i.userID === chatOther.id).name\n            );\n          }\n          setChatDescription(\"last seen some time ago\");\n          break;\n        case \"group\":\n          setChatTitle(activeChatObject.title);\n          setChatDescription(activeChatObject.users.length + \" members\");\n          break;\n        default:\n          break;\n      }\n    }\n  });\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1,\n        height: \"100%\",\n      }}\n    >\n      <div style={{ padding: \"5px\", height: \"48px\" }}>\n        <b>{chatTitle}</b>\n        <div>{chatDescription}</div>\n      </div>\n      <div\n        style={{\n          flex: 1,\n          overflowY: \"scroll\",\n        }}\n      >\n        <Chat chatsTrans={props.chatsTrans} activeChat={props.activeChat} />\n      </div>\n      <div\n        style={{\n          flex: \"0 0 auto\",\n          height: \"40px\",\n        }}\n      >\n        {\" \"}\n        <Form\n          onSubmit={handleSend}\n          style={{ marginLeft: \"10px\", height: \"40px\" }}\n        >\n          <Form.Input\n            transparent\n            style={{ height: \"40px\" }}\n            id=\"reply\"\n            name=\"reply\"\n            placeholder=\"Write a message...\"\n          />\n        </Form>\n      </div>\n\n      <Groupcontacts />\n    </div>\n  );\n};\n\nexport default Main;\n","import React, { useState } from \"react\";\n\nimport { Modal, Form, Button, Segment, Message } from \"semantic-ui-react\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst Newuser = (props) => {\n  const [email, setEmail] = useState();\n  const [name, setName] = useState();\n  const [password, setPassword] = useState();\n  const [formError, setFormError] = useState(false);\n  const [errorCode, setErrorCode] = useState();\n  const [errorMessage, setErrorMessage] = useState();\n  const newUserSubmit = (email, password) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        props.db.collection(\"users\").doc(result.user.uid).set(\n          {\n            name: name,\n            email: result.user.email,\n            chats: [],\n            contacts: [],\n            activeChat: null,\n            addrequests: [],\n          },\n          { merge: false }\n        );\n        props.setNewUser(false);\n        setFormError(false);\n      })\n      .catch(function (error) {\n        setFormError(true);\n        setErrorCode(error.code);\n        setErrorMessage(error.message);\n      });\n  };\n  return (\n    <Modal size=\"tiny\" open={props.open}>\n      <Modal.Content>\n        <Form onSubmit={() => newUserSubmit(email, password)} error={formError}>\n          <Segment raised>\n            <Form.Input\n              fluid\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"E-mail address\"\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"User Name\"\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n            />\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              type=\"password\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n            <Message error header={errorCode} content={errorMessage}></Message>\n            <Button color=\"teal\" fluid size=\"large\">\n              Sign Up\n            </Button>\n          </Segment>\n        </Form>\n        <Message\n          onClick={() => {\n            props.setNewUser(false);\n          }}\n        >\n          Go back\n        </Message>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default Newuser;\n","import React, { useState } from \"react\";\n\nimport { Modal, Form, Button, Segment, Message } from \"semantic-ui-react\";\n\nimport Newuser from \"./Newuser\";\n\nconst Login = (props) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [newUser, setNewUser] = useState(false);\n  return (\n    <Modal size=\"tiny\" open={props.open}>\n      <Modal.Header>Welcome to Entropy. Please log in:</Modal.Header>\n      <Modal.Content>\n        <Form\n          onSubmit={() => props.loginSubmit(email, password)}\n          error={props.loginError}\n        >\n          <Segment raised>\n            <Form.Input\n              fluid\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"E-mail address\"\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              type=\"password\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n            <Message\n              error\n              header={props.loginErrorCode}\n              content={props.loginErrorMessage}\n            ></Message>\n            <Button color=\"teal\" fluid size=\"large\">\n              Login\n            </Button>\n          </Segment>\n        </Form>\n        <Segment raised>\n          <Button\n            color=\"teal\"\n            fluid\n            size=\"large\"\n            onClick={props.googleLoginSubmit}\n          >\n            Login with Google\n          </Button>\n        </Segment>\n        <Message>\n          Don't have an account?{\" \"}\n          <a\n            onClick={() => {\n              setNewUser(true);\n            }}\n          >\n            Sign Up\n          </a>\n          <Newuser open={newUser} db={props.db} setNewUser={setNewUser} />\n        </Message>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Modal, Button, List } from \"semantic-ui-react\";\n\nvar uniqid = require(\"uniqid\");\n\nconst Approveadd = (props) => {\n  const [contactSelect, setContactSelect] = useState({ id: null });\n  const approveContact = (contact) => {\n    if (contact.id !== null) {\n      props.db\n        .collection(\"users\")\n        .doc(props.user)\n        .get()\n        .then((doc) => {\n          const contactGets = doc.data().contacts.map((i) => i.get());\n          Promise.all(contactGets).then((result) => {\n            props.db\n              .collection(\"users\")\n              .doc(props.user)\n              .set(\n                {\n                  contacts: result.concat(contact).map((i) => i.ref),\n                },\n                { merge: true }\n              );\n          });\n          props.setAddRequests(\n            props.addRequests.filter((i) => i.id !== contact.id)\n          );\n        });\n      props.db\n        .collection(\"users\")\n        .doc(contact.id)\n        .get()\n        .then((doc) => {\n          const contactGets = doc.data().contacts.map((i) => i.get());\n          Promise.all(contactGets).then((result) => {\n            props.db\n              .collection(\"users\")\n              .doc(contact.id)\n              .set(\n                {\n                  contacts: result.concat(\n                    props.db.collection(\"users\").doc(props.user)\n                  ),\n                },\n                { merge: true }\n              );\n          });\n        });\n    }\n  };\n  const rejectContact = (contact) => {\n    if (contact !== undefined) {\n      props.setAddRequests(\n        props.addRequests.filter((i) => i.id !== contact.id)\n      );\n    }\n  };\n  useEffect(() => {\n    if (props.user !== undefined) {\n      props.db\n        .collection(\"users\")\n        .doc(props.user)\n        .set(\n          {\n            addrequests: props.addRequests.map((request) =>\n              props.db.collection(\"users\").doc(request.id)\n            ),\n          },\n          { merge: true }\n        );\n    }\n  }, [props.addRequests]);\n  return (\n    <Modal open={props.approveAddOpen}>\n      <Modal.Content>\n        <List selection>\n          {props.addRequests.map((request) => {\n            return (\n              <List.Item\n                key={uniqid()}\n                id={request.id}\n                active={contactSelect.id === request.id}\n                onClick={(e) => {\n                  setContactSelect(request);\n                }}\n              >\n                {request.data().name}\n              </List.Item>\n            );\n          })}\n        </List>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          onClick={() => {\n            approveContact(contactSelect);\n          }}\n        >\n          Approve\n        </Button>\n        <Button\n          onClick={() => {\n            rejectContact(contactSelect);\n          }}\n        >\n          Reject\n        </Button>\n        <Button\n          onClick={() => {\n            props.setApproveAddOpen(false);\n          }}\n        >\n          Dismiss\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default Approveadd;\n","import React, { useState } from \"react\";\n\nimport { Modal, Form, Button } from \"semantic-ui-react\";\n\nconst Addcontact = (props) => {\n  const [email, setEmail] = useState();\n  const sendRequest = (email) => {\n    console.log(\"You submitted an add contact request\");\n    props.db\n      .collection(\"users\")\n      .where(\"email\", \"==\", email)\n      .get()\n      .then((querySnapshot) => {\n        if (!querySnapshot.empty) {\n          if (props.contacts.some((i) => i.id === querySnapshot.docs[0].id)) {\n            console.log(\"You already have that contact.\");\n          } else {\n            props.db\n              .collection(\"users\")\n              .doc(querySnapshot.docs[0].id)\n              .set(\n                {\n                  addrequests: querySnapshot.docs[0]\n                    .data()\n                    .addrequests.concat(\n                      props.db.collection(\"users\").doc(props.user)\n                    ),\n                },\n                { merge: true }\n              );\n          }\n        } else {\n          console.log(\"That email doesn't exist.\");\n        }\n      });\n    props.setAddContactOpen(false);\n  };\n  return (\n    <Modal open={props.addContactOpen} size=\"mini\">\n      <Modal.Header>Add Contact:</Modal.Header>\n\n      <Modal.Content>\n        <Form>\n          <Form.Input\n            fluid\n            icon=\"user\"\n            iconPosition=\"left\"\n            placeholder=\"E-mail address\"\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n        </Form>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          onClick={() => {\n            props.setAddContactOpen(false);\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            sendRequest(email);\n            props.setAddContactOpen(false);\n          }}\n          primary\n        >\n          Send Request\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default Addcontact;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Modal, Button, List } from \"semantic-ui-react\";\n\nimport Addcontact from \"./Addcontact\";\n\nvar uniqid = require(\"uniqid\");\n\nconst Contacts = (props) => {\n  const [contacts, setContacts] = useState([]);\n  const [addContactOpen, setAddContactOpen] = useState(false);\n  const startPrivateChat = (user) => {\n    let privateChatExists = [];\n    const chatGets = props.chats.map((chat) =>\n      props.db.collection(\"chats\").doc(chat.chatID).get()\n    );\n    Promise.all(chatGets).then((result) => {\n      privateChatExists = result.filter((i) => {\n        return (\n          i.data().type === \"private\" &&\n          i.data().users.some((j) => user.id === j.id)\n        );\n      });\n      if (privateChatExists.length === 0) {\n        props.db\n          .collection(\"chats\")\n          .add({\n            type: \"private\",\n            users: [\n              props.db.doc(\"/users/\" + props.user),\n              props.db.doc(\"/users/\" + user.id),\n            ],\n          })\n          .then((result) => {\n            props.db.collection(result.id).add({\n              name: props.name,\n              author: props.db.doc(\"/users/\" + props.user),\n              date: props.dbFunc.Timestamp.now(),\n              content: \"This is the first message.\",\n            });\n            props.db\n              .collection(\"users\")\n              .doc(props.user)\n              .set(\n                {\n                  chats: props.chats.map((i) => i.chatID).concat(result.id),\n                },\n                { merge: true }\n              );\n            props.db\n              .collection(\"users\")\n              .doc(user.id)\n              .set(\n                {\n                  chats: props.chats.map((i) => i.chatID).concat(result.id),\n                },\n                { merge: true }\n              );\n          });\n      } else {\n        props.setActiveChat(privateChatExists[0].id);\n        props.setOpenContacts(false);\n      }\n    });\n  };\n  useEffect(() => {\n    if (props.user !== undefined) {\n      props.db\n        .collection(\"users\")\n        .doc(props.user)\n        .get()\n        .then((doc) => {\n          const contactGets = doc\n            .data()\n            .contacts.map((contact) => contact.get());\n          Promise.all(contactGets).then((result) => {\n            setContacts(\n              result.map((contact) => {\n                return { name: contact.data().name, id: contact.id };\n              })\n            );\n          });\n        });\n    }\n  }, [props.open]);\n  return (\n    <Modal open={props.open} size=\"mini\">\n      <Modal.Header>Contacts</Modal.Header>\n      <Modal.Content>\n        <List selection>\n          {contacts.map((contact) => {\n            return (\n              <List.Item\n                key={uniqid()}\n                onClick={(e) => {\n                  startPrivateChat(contact);\n                  props.setOpenContacts(false);\n                }}\n              >\n                {contact.name}\n              </List.Item>\n            );\n          })}\n        </List>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          onClick={() => {\n            setAddContactOpen(true);\n          }}\n          primary\n        >\n          Add Contact\n        </Button>\n        <Button\n          onClick={() => {\n            props.setOpenContacts(false);\n          }}\n        >\n          Close\n        </Button>\n      </Modal.Actions>\n      <Addcontact\n        db={props.db}\n        user={props.user}\n        contacts={contacts}\n        addContactOpen={addContactOpen}\n        setAddContactOpen={setAddContactOpen}\n      />\n    </Modal>\n  );\n};\n\nexport default Contacts;\n","import React, { useState } from \"react\";\n\nimport { Modal, Form, Button, List } from \"semantic-ui-react\";\n\nconst Addgroup = (props) => {\n  const [group, setGroup] = useState(\"\");\n  return (\n    <Modal open={props.open} size=\"mini\">\n      <Modal.Header>Add Group</Modal.Header>\n      <Modal.Content>\n        <Form onSubmit={() => {}}>\n          <Form.Input\n            fluid\n            icon=\"group\"\n            iconPosition=\"left\"\n            placeholder=\"Group name\"\n            onChange={(e) => {\n              setGroup(e.target.value);\n            }}\n          />\n        </Form>\n        <List></List>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          onClick={() => {\n            props.setAddGroup(false);\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            if (group.length > 0) {\n              props.setGroupAddName(group);\n              props.setGroupContacts(true);\n              props.setAddGroup(false);\n            }\n          }}\n          primary\n        >\n          Next\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default Addgroup;\n","import React, { useState, useEffect, useReducer } from \"react\";\n\nimport \"./App.css\";\n\nimport Nav from \"./Nav\";\nimport Main from \"./Main\";\nimport Login from \"./Login\";\nimport Approveadd from \"./Approveadd\";\nimport Contacts from \"./Contacts\";\nimport Addgroup from \"./Addgroup\";\nimport Groupcontacts from \"./Groupcontacts\";\n\nimport { Menu, Icon, Sidebar } from \"semantic-ui-react\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCiemC3RJx8s3kHs4Y2SasrhG_epoQjEDw\",\n  authDomain: \"entropy-messenger.firebaseapp.com\",\n  databaseURL: \"https://entropy-messenger.firebaseio.com\",\n  projectId: \"entropy-messenger\",\n  storageBucket: \"entropy-messenger.appspot.com\",\n  messagingSenderId: \"739103714260\",\n  appId: \"1:739103714260:web:9f34197363bb3b2e4dc441\",\n  measurementId: \"G-WNTGXPFSRH\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nvar db = firebase.firestore();\nvar dbFunc = firebase.firestore;\n\nconst App = () => {\n  const [user, setUser] = useState();\n  const [name, setName] = useState();\n  const [chatIDs, setChatIDs] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [activeChat, setActiveChat] = useState();\n  const [loginOpen, setLoginOpen] = useState(true);\n  const [loginError, setLoginError] = useState(false);\n  const [loginErrorCode, setLoginErrorCode] = useState(\"\");\n  const [loginErrorMessage, setLoginErrorMessage] = useState(\"\");\n  const [approveAddOpen, setApproveAddOpen] = useState(false);\n  const [addRequests, setAddRequests] = useState([]);\n  const [openContacts, setOpenContacts] = useState(false);\n  const [addGroup, setAddGroup] = useState(false);\n  const [groupContacts, setGroupContacts] = useState(false);\n  const [groupAddName, setGroupAddName] = useState(\"This is the wrong name\");\n  const [groupAddContacts, setGroupAddContacts] = useState([]);\n\n  const [visible, setVisible] = useState(false);\n\n  const [chatsData, chatsDataUpdate] = useReducer(\n    (state, action) => {\n      console.log(\"chatsData state: \", state);\n      return {\n        chats: state.chats\n          .filter((i) => i.chatID !== action.chatID)\n          .concat({\n            title: action.title,\n            type: action.type,\n            users: action.users,\n            chatID: action.chatID,\n          }),\n      };\n    },\n    { chats: [] }\n  );\n  const [chatsTrans, chatsTransUpdate] = useReducer(\n    (state, action) => {\n      return {\n        chats: state.chats\n          .filter((i) => i.chatID !== action.chatID)\n          .concat({ chatID: action.chatID, data: action.data }),\n      };\n    },\n    { chats: [] }\n  );\n  useEffect(() => {\n    console.log(\"user: \", user);\n  });\n  useEffect(() => {\n    console.log(\"name: \", name);\n  });\n  useEffect(() => {\n    const userGets = chatsData.chats\n      .map((i) => i.users)\n      .flat()\n      .filter((i) => i.id !== user)\n      .map((i) => i.get());\n    Promise.all(userGets).then((users) => {\n      console.log(\"users: \", users);\n      setUsers(\n        users.map((j) => {\n          console.log(\"j.data(): \", j.data());\n          return {\n            name: j.data().name,\n            email: j.data().email,\n            userID: j.id,\n          };\n        })\n      );\n    });\n  }, [chatsData]);\n  const activeChatCallback = (chat) => {\n    setActiveChat(chat);\n    db.collection(\"users\").doc(user).set({ activeChat: chat }, { merge: true });\n  };\n  const loginDataLoad = (result) => {\n    const userRef = db.collection(\"users\").doc(result.user.uid);\n    userRef\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          console.log(\"result: \", result);\n          setUser(result.user.uid);\n          //          setName(result.user.displayName);\n          userRef.onSnapshot((snapshot) => {\n            handleUserUpdate(snapshot);\n          });\n        } else {\n          db.collection(\"users\").doc(result.user.uid).set(\n            {\n              name: result.user.displayName,\n              email: result.user.email,\n              chats: [],\n              contacts: [],\n              activeChat: null,\n              addrequests: [],\n            },\n            { merge: false }\n          );\n        }\n      })\n      .then(() => {\n        setLoginOpen(false);\n        setLoginError(false);\n      });\n  };\n  const loginSubmitCallback = (email, password) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((result) => loginDataLoad(result));\n  };\n  const googleLoginSubmitCallback = () => {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => loginDataLoad(result));\n  };\n  const handleUserUpdate = (snapshot) => {\n    handleAddRequests(snapshot.data().addrequests);\n    handleChats(snapshot.data().chats);\n    handleName(snapshot.data().name);\n  };\n  const handleChats = (chatIDs) => {\n    setChatIDs(chatIDs);\n  };\n  const handleName = (name) => {\n    setName(name);\n  };\n  useEffect(() => {\n    chatIDs\n      .filter((i) => !chatsData.chats.find((j) => j.chatID === i))\n      .forEach((chatID) => {\n        db.collection(\"chats\")\n          .doc(chatID)\n          .onSnapshot((result) => {\n            chatsDataUpdate({\n              title: result.data().title,\n              type: result.data().type,\n              users: result.data().users,\n              chatID: result.id,\n            });\n          });\n        const query = db.collection(chatID).orderBy(\"date\", \"asc\");\n        query.onSnapshot((querySnapshot) => {\n          const data = querySnapshot.docs.map((doc) => doc.data());\n          Promise.resolve().then(() => {\n            chatsTransUpdate({ chatID: chatID, data: data });\n          });\n        });\n      });\n  }, [chatIDs]);\n  const handleAddRequests = (requests) => {\n    if (requests.length > 0) {\n      const contactGets = requests.map((request) => request.get());\n      Promise.all(contactGets).then((results) => {\n        setAddRequests(results);\n      });\n      setApproveAddOpen(true);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        height: \"100%\",\n        width: \"100%\",\n      }}\n    >\n      <Sidebar.Pushable>\n        <Sidebar\n          as={Menu}\n          animation=\"overlay\"\n          icon=\"labeled\"\n          inverted\n          vertical\n          visible={visible}\n          width=\"thin\"\n        >\n          <Menu.Item\n            as=\"a\"\n            onClick={() => {\n              setAddGroup(true);\n              setVisible(false);\n            }}\n          >\n            <Icon name=\"group\" />\n            New Group\n          </Menu.Item>\n          <Menu.Item\n            as=\"a\"\n            onClick={() => {\n              setOpenContacts(true);\n              setVisible(false);\n            }}\n          >\n            <Icon name=\"user\" />\n            Contacts\n          </Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={visible}>\n          {\" \"}\n          <div\n            style={{\n              position: \"absolute\",\n              width: \"30%\",\n              height: \"100%\",\n              overflowY: \"auto\",\n            }}\n          >\n            <Nav\n              db={db}\n              dbFunc={dbFunc}\n              user={user}\n              name={name}\n              users={users}\n              chats={chatsData.chats}\n              chatsTrans={chatsTrans}\n              setActiveChat={activeChatCallback}\n              activeChat={activeChat}\n              setVisible={setVisible}\n            />\n          </div>\n          <div\n            style={{\n              position: \"fixed\",\n              left: \"30%\",\n              width: \"70%\",\n              height: \"100%\",\n            }}\n          >\n            <Main\n              db={db}\n              dbFunc={dbFunc}\n              user={user}\n              name={name}\n              activeChat={activeChat}\n              chats={chatsData.chats}\n              users={users}\n              chatsTrans={chatsTrans}\n            />\n          </div>\n          <Login\n            open={loginOpen}\n            loginSubmit={loginSubmitCallback}\n            googleLoginSubmit={googleLoginSubmitCallback}\n            db={db}\n            loginError={loginError}\n            loginErrorCode={loginErrorCode}\n            loginErrorMessage={loginErrorMessage}\n          />\n          <Approveadd\n            db={db}\n            user={user}\n            approveAddOpen={approveAddOpen}\n            setApproveAddOpen={setApproveAddOpen}\n            addRequests={addRequests}\n            setAddRequests={setAddRequests}\n          />\n          <Contacts\n            open={openContacts}\n            db={db}\n            user={user}\n            setOpenContacts={setOpenContacts}\n            chats={chatsData.chats}\n            setActiveChat={setActiveChat}\n            dbFunc={dbFunc}\n            name={name}\n          />\n          <Addgroup\n            open={addGroup}\n            setAddGroup={setAddGroup}\n            setGroupContacts={setGroupContacts}\n            setGroupAddName={setGroupAddName}\n          />\n          <Groupcontacts\n            open={groupContacts}\n            name={name}\n            setGroupContacts={setGroupContacts}\n            setGroupAddContacts={setGroupAddContacts}\n            groupAddName={groupAddName}\n            user={user}\n            db={db}\n            dbFunc={dbFunc}\n          />\n        </Sidebar.Pusher>\n      </Sidebar.Pushable>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"semantic-ui-less/semantic.less\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}