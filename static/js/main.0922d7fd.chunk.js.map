{"version":3,"sources":["Time.js","Navitem.js","Nav.js","Message.js","Chat.js","Groupcontacts.js","Main.js","Newuser.js","Login.js","Approveadd.js","Addcontact.js","Contacts.js","Addgroup.js","App.js","serviceWorker.js","index.js"],"names":["parseTime","timestamp","ampm","toDate","getHours","hoursShift","getMinutes","parseDate","getDate","getMonth","getFullYear","Navitem","props","now","useState","activeChat","setActiveChat","useEffect","console","log","chatTrans","data","length","Menu","Item","name","title","onClick","chat","chatID","active","Comment","Group","Avatar","src","Content","Author","as","type","Icon","Metadata","date","dbFunc","Timestamp","Text","author","id","user","content","uniqid","require","Nav","style","position","width","display","flexDirection","flex","height","alignItems","padding","size","setVisible","marginLeft","marginRight","Form","flexGrow","Field","Input","placeholder","secondary","vertical","fluid","marginTop","overflowY","chats","map","undefined","chatsTrans","find","i","chatOther","users","userID","key","Message","Chat","feed","setFeed","document","getElementById","scrollIntoView","db","Groupcontacts","contacts","setContacts","collection","doc","get","then","contactGets","contact","Promise","all","result","open","Modal","Header","icon","iconPosition","onChange","e","List","selection","Actions","Button","setGroupContacts","primary","Main","chatTitle","setChatTitle","chatDescription","setChatDescription","activeChatObject","onSubmit","preventDefault","add","target","reply","value","catch","error","margin","Newuser","email","setEmail","setName","password","setPassword","formError","setFormError","errorCode","setErrorCode","errorMessage","setErrorMessage","firebase","createUserWithEmailAndPassword","uid","set","merge","setNewUser","code","message","newUserSubmit","Segment","raised","header","color","Login","newUser","loginSubmit","loginError","loginErrorCode","loginErrorMessage","googleLoginSubmit","Approveadd","contactSelect","setContactSelect","addrequests","addRequests","request","approveAddOpen","concat","ref","setAddRequests","filter","setApproveAddOpen","Addcontact","addContactOpen","where","querySnapshot","empty","some","docs","setAddContactOpen","sendRequest","Contacts","privateChatExists","chatGets","j","setOpenContacts","startPrivateChat","Addgroup","setGroup","setAddGroup","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","setUser","setChats","chatIDs","setChatIDs","setUsers","loginOpen","setLoginOpen","setLoginError","setLoginErrorCode","setLoginErrorMessage","openContacts","addGroup","groupContacts","visible","useReducer","state","action","otherUserID","chatsData","chatsDataUpdate","chatsTransUpdate","results","userGets","flat","handleUserUpdate","snapshot","handleAddRequests","handleChats","forEach","onSnapshot","orderBy","resolve","requests","Pushable","animation","inverted","Pusher","dimmed","left","signInWithEmailAndPassword","provider","GoogleAuthProvider","signInWithPopup","userRef","exists","displayName","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0922d7fd.chunk.js","sourcesContent":["const parseTime = (timestamp) => {\r\n  const ampm = timestamp.toDate().getHours() < 12 ? \"AM\" : \"PM\";\r\n  const hoursShift = (timestamp.toDate().getHours() + 12) % 12;\r\n  const hours = hoursShift === 0 ? 12 : hoursShift;\r\n  const minutes =\r\n    timestamp.toDate().getMinutes() < 10\r\n      ? \"0\" + timestamp.toDate().getMinutes()\r\n      : timestamp.toDate().getMinutes();\r\n  return hours + \":\" + minutes + \" \" + ampm;\r\n};\r\n\r\nconst parseDate = (timestamp) => {\r\n  return (\r\n    timestamp.toDate().getDate() +\r\n    \".\" +\r\n    timestamp.toDate().getMonth() +\r\n    \".\" +\r\n    (timestamp.toDate().getFullYear() - 2000)\r\n  );\r\n};\r\n\r\nconst parsePast = (timestamp, now) => {\r\n  const minute = 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n  const timeDiff = now.seconds - timestamp.seconds;\r\n  if (timeDiff < minute) {\r\n    return \"just now\";\r\n  }\r\n  if (timeDiff < minute * 2) {\r\n    return \"1 minute\";\r\n  }\r\n  if (timeDiff < hour) {\r\n    return Math.floor(timeDiff / minute) + \" minutes\";\r\n  }\r\n  if (timeDiff < hour * 2) {\r\n    return \"1 hour\";\r\n  }\r\n  if (timeDiff < day) {\r\n    return Math.floor(timeDiff / hour) + \" hours\";\r\n  }\r\n  return parseDate(timestamp);\r\n};\r\n\r\nconst dayEquality = (timestamp, now) => {\r\n  if (\r\n    timestamp.toDate().getDate() === now.toDate().getDate() &&\r\n    timestamp.toDate().getMonth() === now.toDate().getMonth() &&\r\n    timestamp.toDate().getFullYear() === now.toDate().getFullYear()\r\n  ) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport { parseTime, parseDate, parsePast, dayEquality };\r\n","import React, { useState, useEffect } from \"react\";\n\nimport { Menu, Comment, Icon } from \"semantic-ui-react\";\n\nimport { parseTime, parseDate, parsePast, dayEquality } from \"./Time\";\n\nconst Navitem = (props) => {\n  const [activeChat, setActiveChat] = useState(props.activeChat);\n  useEffect(() => {\n    console.log(props.chatTrans.data[props.chatTrans.data.length - 1]);\n  }, [props.chatTrans.data]);\n  return (\n    <Menu.Item\n      name={props.title}\n      onClick={() => {\n        props.setActiveChat(props.chat.chatID);\n        setActiveChat(props.chat.chatID);\n      }}\n      active={props.chat.chatID === props.activeChat}\n    >\n      <Comment.Group>\n        <Comment>\n          <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/matt.jpg\" />\n          <Comment.Content>\n            <Comment.Author as=\"a\">\n              {props.chat.type === \"group\" ? <Icon name=\"users\" /> : \"\"}\n              {props.title}\n            </Comment.Author>\n            <Comment.Metadata>\n              {dayEquality(\n                props.chatTrans.data[props.chatTrans.data.length - 1].date,\n                props.dbFunc.Timestamp.now()\n              )\n                ? parseTime(\n                    props.chatTrans.data[props.chatTrans.data.length - 1].date\n                  )\n                : parseDate(\n                    props.chatTrans.data[props.chatTrans.data.length - 1].date\n                  )}\n            </Comment.Metadata>\n            <Comment.Text>\n              {\" \"}\n              {props.chatTrans.data[props.chatTrans.data.length - 1].author\n                .id === props.user\n                ? \"You: \"\n                : props.chatTrans.data[props.chatTrans.data.length - 1].name +\n                  \": \"}\n              {props.chatTrans.data[props.chatTrans.data.length - 1].content}\n            </Comment.Text>\n          </Comment.Content>\n        </Comment>\n      </Comment.Group>\n    </Menu.Item>\n  );\n};\n\nexport default Navitem;\n","import React, { useEffect, useState, useReducer } from \"react\";\n\nimport { Input, Menu, Button, Form, Icon } from \"semantic-ui-react\";\n\nimport Navitem from \"./Navitem\";\n\nimport \"./Sidebar.css\";\n\nvar uniqid = require(\"uniqid\");\n\nconst Nav = (props) => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1,\n        height: \"100%\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          padding: \"5px\",\n        }}\n      >\n        <Icon\n          name=\"content\"\n          size=\"large\"\n          onClick={() => {\n            props.setVisible(true);\n          }}\n          style={{\n            marginLeft: \"10px\",\n            marginRight: \"16px\",\n          }}\n        />\n        <Form style={{ flexGrow: \"1\" }}>\n          <Form.Field>\n            <Input placeholder=\"Search\" />\n          </Form.Field>\n        </Form>\n      </div>\n      <Menu\n        secondary\n        vertical\n        fluid\n        style={{ marginTop: \"0px\", flex: \"1\", overflowY: \"auto\" }}\n      >\n        {props.chats.map((chat) => {\n          if (\n            props.chatsTrans.chats.find((i) => chat.chatID === i.chatID) !==\n            undefined\n          ) {\n            if (chat.type === \"private\") {\n              let chatOther = chat.users.find((i) => i.id !== props.user);\n              let user = props.users.find((i) => i.userID === chatOther.id);\n              if (user !== undefined) {\n                var title = user.name;\n              }\n            } else {\n              var title = chat.title;\n            }\n            return (\n              <Navitem\n                chat={chat}\n                chatTrans={props.chatsTrans.chats.find(\n                  (i) => chat.chatID === i.chatID\n                )}\n                user={props.user}\n                users={props.users}\n                setActiveChat={props.setActiveChat}\n                activeChat={props.activeChat}\n                title={title}\n                key={uniqid()}\n                dbFunc={props.dbFunc}\n              />\n            );\n          }\n        })}\n      </Menu>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport {parseTime} from \"./Time\"\n\nimport { Comment } from \"semantic-ui-react\";\n\nconst Message = (props) => {\n  return (\n    <Comment>\n      <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/matt.jpg\" />\n      <Comment.Content>\n        <Comment.Author as=\"a\">{props.data.name}</Comment.Author>\n        <Comment.Metadata>\n          <div>\n            {parseTime(props.data.date)}\n          </div>\n        </Comment.Metadata>\n        <Comment.Text>{props.data.content}</Comment.Text>\n      </Comment.Content>\n    </Comment>\n  );\n};\n\nexport default Message;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Comment } from \"semantic-ui-react\";\n\nimport Message from \"./Message\";\n\nvar uniqid = require(\"uniqid\");\n\nconst Chat = (props) => {\n  const [feed, setFeed] = useState({ chatID: \"\", data: [] });\n  useEffect(() => {\n    if (props.chatsTrans.chats.find((i) => i.chatID === props.activeChat)) {\n      setFeed(\n        props.chatsTrans.chats.find((i) => i.chatID === props.activeChat)\n      );\n    }\n  }, [props.activeChat, props.chatsTrans]);\n  useEffect(() => {\n    document.getElementById(\"chatbottom\").scrollIntoView();\n  });\n  return (\n    <div\n      style={{\n        padding: \"5px\",\n        width: \"100%\",\n      }}\n    >\n      <Comment.Group>\n        {feed.data.map((i) => {\n          return <Message key={uniqid()} data={i} db={props.db} />;\n        })}\n        <div id=\"chatbottom\"></div>\n      </Comment.Group>\n    </div>\n  );\n};\n\nexport default Chat;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Modal, Button, List, Form } from \"semantic-ui-react\";\n\nvar uniqid = require(\"uniqid\");\n\nconst Groupcontacts = (props) => {\n  const [contacts, setContacts] = useState([]);\n  useEffect(() => {\n    if (props.user !== undefined) {\n      props.db\n        .collection(\"users\")\n        .doc(props.user)\n        .get()\n        .then((doc) => {\n          const contactGets = doc\n            .data()\n            .contacts.map((contact) => contact.get());\n          Promise.all(contactGets).then((result) => {\n            setContacts(\n              result.map((contact) => {\n                return { name: contact.data().name, id: contact.id };\n              })\n            );\n          });\n        });\n    }\n  }, [props.open]);\n  return (\n    <Modal open={props.open} size=\"mini\">\n      <Modal.Header>Add Members:</Modal.Header>\n      <Modal.Content>\n        <Form>\n          {\" \"}\n          <Form.Input\n            fluid\n            icon=\"search\"\n            iconPosition=\"left\"\n            placeholder=\"Search\"\n            onChange={(e) => {}}\n          />\n        </Form>\n        <List selection>\n          {contacts.map((contact) => {\n            return (\n              <List.Item key={uniqid()} onClick={(e) => {}}>\n                {contact.name}\n              </List.Item>\n            );\n          })}\n        </List>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          onClick={() => {\n            props.setGroupContacts(false);\n          }}\n        >\n          Cancel\n        </Button>\n        <Button onClick={() => {}} primary>\n          Create\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default Groupcontacts;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Form, TextArea, Button } from \"semantic-ui-react\";\n\nimport {parseTime, parsePast} from \"./Time\"\n\nimport \"./Main.css\";\n\nimport Chat from \"./Chat\";\nimport Groupcontacts from \"./Groupcontacts\";\n\nconst Main = (props) => {\n  const [chatTitle, setChatTitle] = useState(\"This is a test title\");\n  const [chatDescription, setChatDescription] = useState(\n    \"Description goes here\"\n  );\n  const handleSend = (e) => {\n    e.preventDefault();\n    props.db\n      .collection(props.activeChat)\n      .add({\n        name: props.name,\n        author: props.db.doc(\"/users/\" + props.user),\n        date: props.dbFunc.Timestamp.now(),\n        content: e.target.reply.value,\n      })\n      .catch(function (error) {\n        console.error(\"Error adding document: \", error);\n      })\n      .then(() => {\n        e.target.reply.value = \"\";\n      });\n  };\n  const popUpContactAdd = () => {};\n  useEffect(() => {\n    const activeChatObject = props.chats.find(\n      (i) => i.chatID === props.activeChat\n    );\n    if (activeChatObject !== undefined) {\n      switch (activeChatObject.type) {\n        case \"private\":\n          let chatOther = activeChatObject.users.find(\n            (i) => i.id !== props.user\n          );\n          if (\n            props.users.find((i) => i.userID === chatOther.id) !== undefined\n          ) {\n            setChatTitle(\n              props.users.find((i) => i.userID === chatOther.id).name\n            );\n          }\n          setChatDescription(\"last seen \");\n          break;\n        case \"group\":\n          setChatTitle(activeChatObject.title);\n          setChatDescription(activeChatObject.users.length + \" members\");\n          break;\n        default:\n          break;\n      }\n    }\n  }, [props.activeChat, props.chats]);\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1,\n        height: \"100%\",\n      }}\n      onClick={() => {\n        console.log(\"You looked at this chat: \", props.activeChat);\n      }}\n    >\n      <div style={{ padding: \"5px\" }}>\n        <b>{chatTitle}</b>\n        <div>{chatDescription}</div>\n      </div>\n      <div\n        style={{\n          flex: 1,\n          overflowY: \"scroll\",\n        }}\n      >\n        <Chat chatsTrans={props.chatsTrans} activeChat={props.activeChat} />\n      </div>\n      <div\n        style={{\n          flex: \"0 0 auto\",\n        }}\n      >\n        <Form onSubmit={handleSend} style={{ margin: \"5px\" }}>\n          <Form.Input id=\"reply\" name=\"reply\" placeholder=\"Reply\" />\n        </Form>\n      </div>\n      <Groupcontacts />\n    </div>\n  );\n};\n\nexport default Main;\n","import React, { useEffect, useState } from \"react\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Modal, Form, Button, Segment, Message } from \"semantic-ui-react\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst Newuser = (props) => {\n  const [email, setEmail] = useState();\n  const [name, setName] = useState();\n  const [password, setPassword] = useState();\n  const [formError, setFormError] = useState(false);\n  const [errorCode, setErrorCode] = useState();\n  const [errorMessage, setErrorMessage] = useState();\n  const newUserSubmit = (email, password) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        props.db.collection(\"users\").doc(result.user.uid).set(\n          {\n            name: name,\n            email: result.user.email,\n            chats: [],\n            contacts: [],\n            activeChat: null,\n          },\n          { merge: false }\n        );\n        props.setNewUser(false);\n        setFormError(false);\n      })\n      .catch(function (error) {\n        setFormError(true);\n        setErrorCode(error.code);\n        setErrorMessage(error.message);\n      });\n  };\n  return (\n    <Modal size=\"tiny\" open={props.open}>\n      <Modal.Content>\n        <Form onSubmit={() => newUserSubmit(email, password)} error={formError}>\n          <Segment raised>\n            <Form.Input\n              fluid\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"E-mail address\"\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"User Name\"\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n            />\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              type=\"password\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n            <Message error header={errorCode} content={errorMessage}></Message>\n            <Button color=\"teal\" fluid size=\"large\">\n              Sign Up\n            </Button>\n          </Segment>\n        </Form>\n        <Message\n          onClick={() => {\n            props.setNewUser(false);\n          }}\n        >\n          Go back\n        </Message>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default Newuser;\n","import React, { useState } from \"react\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Modal, Form, Button, Segment, Message } from \"semantic-ui-react\";\n\nimport Newuser from \"./Newuser\";\n\nconst Login = (props) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [newUser, setNewUser] = useState(false);\n  return (\n    <Modal size=\"tiny\" open={props.open}>\n      <Modal.Header>Welcome to Entropy. Please log in:</Modal.Header>\n      <Modal.Content>\n        <Form\n          onSubmit={() => props.loginSubmit(email, password)}\n          error={props.loginError}\n        >\n          <Segment raised>\n            <Form.Input\n              fluid\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"E-mail address\"\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              type=\"password\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n            <Message\n              error\n              header={props.loginErrorCode}\n              content={props.loginErrorMessage}\n            ></Message>\n            <Button color=\"teal\" fluid size=\"large\">\n              Login\n            </Button>\n          </Segment>\n        </Form>\n        <Segment raised>\n          <Button\n            color=\"teal\"\n            fluid\n            size=\"large\"\n            onClick={props.googleLoginSubmit}\n          >\n            Login with Google\n          </Button>\n        </Segment>\n        <Message>\n          Don't have an account?{\" \"}\n          <a\n            onClick={() => {\n              setNewUser(true);\n            }}\n          >\n            Sign Up\n          </a>\n          <Newuser open={newUser} db={props.db} setNewUser={setNewUser} />\n        </Message>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Modal, Button, List } from \"semantic-ui-react\";\n\nvar uniqid = require(\"uniqid\");\n\nconst Approveadd = (props) => {\n  const [contactSelect, setContactSelect] = useState({ id: null });\n  const approveContact = (contact) => {\n    if (contact.id !== null) {\n      props.db\n        .collection(\"users\")\n        .doc(props.user)\n        .get()\n        .then((doc) => {\n          const contactGets = doc.data().contacts.map((i) => i.get());\n          Promise.all(contactGets).then((result) => {\n            props.db\n              .collection(\"users\")\n              .doc(props.user)\n              .set(\n                {\n                  contacts: result.concat(contact).map((i) => i.ref),\n                },\n                { merge: true }\n              );\n          });\n          props.setAddRequests(\n            props.addRequests.filter((i) => i.id !== contact.id)\n          );\n        });\n      props.db\n        .collection(\"users\")\n        .doc(contact.id)\n        .get()\n        .then((doc) => {\n          const contactGets = doc.data().contacts.map((i) => i.get());\n          Promise.all(contactGets).then((result) => {\n            props.db\n              .collection(\"users\")\n              .doc(contact.id)\n              .set(\n                {\n                  contacts: result.concat(\n                    props.db.collection(\"users\").doc(props.user)\n                  ),\n                },\n                { merge: true }\n              );\n          });\n        });\n    }\n  };\n  const rejectContact = (contact) => {\n    if (contact !== undefined) {\n      props.setAddRequests(\n        props.addRequests.filter((i) => i.id !== contact.id)\n      );\n    }\n  };\n  useEffect(() => {\n    if (props.user !== undefined) {\n      props.db\n        .collection(\"users\")\n        .doc(props.user)\n        .set(\n          {\n            addrequests: props.addRequests.map((request) =>\n              props.db.collection(\"users\").doc(request.id)\n            ),\n          },\n          { merge: true }\n        );\n    }\n  }, [props.addRequests]);\n  return (\n    <Modal open={props.approveAddOpen}>\n      <List selection>\n        {props.addRequests.map((request) => {\n          return (\n            <List.Item\n              key={uniqid()}\n              id={request.id}\n              active={contactSelect.id === request.id}\n              onClick={(e) => {\n                setContactSelect(request);\n              }}\n            >\n              {request.data().name}\n            </List.Item>\n          );\n        })}\n      </List>\n      <Button\n        onClick={() => {\n          approveContact(contactSelect);\n        }}\n      >\n        Approve\n      </Button>\n      <Button\n        onClick={() => {\n          rejectContact(contactSelect);\n        }}\n      >\n        Reject\n      </Button>\n      <Button\n        onClick={() => {\n          props.setApproveAddOpen(false);\n        }}\n      >\n        Dismiss\n      </Button>\n    </Modal>\n  );\n};\n\nexport default Approveadd;\n","import React, { useState } from \"react\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Modal, Form, Button, Segment, Message } from \"semantic-ui-react\";\n\nconst Addcontact = (props) => {\n  const [email, setEmail] = useState();\n  const sendRequest = (email) => {\n    props.db\n      .collection(\"users\")\n      .where(\"email\", \"==\", email)\n      .get()\n      .then((querySnapshot) => {\n        if (!querySnapshot.empty) {\n          if (props.contacts.some((i) => i.id === querySnapshot.docs[0].id)) {\n            console.log(\"You already have that contact.\");\n          } else {\n            props.db\n              .collection(\"users\")\n              .doc(querySnapshot.docs[0].id)\n              .set(\n                {\n                  addrequests: querySnapshot.docs[0]\n                    .data()\n                    .addrequests.concat(\n                      props.db.collection(\"users\").doc(props.user)\n                    ),\n                },\n                { merge: true }\n              );\n          }\n        } else {\n          console.log(\"That email doesn't exist.\");\n        }\n      });\n    props.setAddContactOpen(false);\n  };\n  return (\n    <Modal open={props.addContactOpen} size=\"mini\">\n      <Modal.Header>Add Contact:</Modal.Header>\n      <Modal.Content>\n        <Form\n          onSubmit={() => {\n            sendRequest(email);\n          }}\n        >\n          <Form.Input\n            fluid\n            icon=\"user\"\n            iconPosition=\"left\"\n            placeholder=\"E-mail address\"\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n        </Form>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          onClick={() => {\n            props.setAddContactOpen(false);\n          }}\n        >\n          Cancel\n        </Button>\n        <Button primary>Send Request</Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default Addcontact;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Modal, Button, List } from \"semantic-ui-react\";\n\nimport Addcontact from \"./Addcontact\";\n\nvar uniqid = require(\"uniqid\");\n\nconst Contacts = (props) => {\n  const [contacts, setContacts] = useState([]);\n  const [addContactOpen, setAddContactOpen] = useState(false);\n  const startPrivateChat = (user) => {\n    let privateChatExists = [];\n    const chatGets = props.chats.map((chat) =>\n      props.db.collection(\"chats\").doc(chat.chatID).get()\n    );\n    Promise.all(chatGets).then((result) => {\n      privateChatExists = result.filter((i) => {\n        return (\n          i.data().type === \"private\" &&\n          i.data().users.some((j) => user.id === j.id)\n        );\n      });\n      if (privateChatExists.length === 0) {\n        props.db\n          .collection(\"chats\")\n          .add({\n            type: \"private\",\n            users: [\n              props.db.doc(\"/users/\" + props.user),\n              props.db.doc(\"/users/\" + user.id),\n            ],\n          })\n          .then((result) => {\n            props.db.collection(result.id).add({\n              name: props.name,\n              author: props.db.doc(\"/users/\" + props.user),\n              date: props.dbFunc.Timestamp.now(),\n              content: \"This is the first message.\",\n            });\n            props.db\n              .collection(\"users\")\n              .doc(props.user)\n              .set(\n                {\n                  chats: props.chats.map((i) => i.chatID).concat(result.id),\n                },\n                { merge: true }\n              );\n            props.db\n              .collection(\"users\")\n              .doc(user.id)\n              .set(\n                {\n                  chats: props.chats.map((i) => i.chatID).concat(result.id),\n                },\n                { merge: true }\n              );\n          });\n      } else {\n        props.setActiveChat(privateChatExists[0].id);\n        props.setOpenContacts(false);\n      }\n    });\n  };\n  useEffect(() => {\n    if (props.user !== undefined) {\n      props.db\n        .collection(\"users\")\n        .doc(props.user)\n        .get()\n        .then((doc) => {\n          const contactGets = doc\n            .data()\n            .contacts.map((contact) => contact.get());\n          Promise.all(contactGets).then((result) => {\n            setContacts(\n              result.map((contact) => {\n                return { name: contact.data().name, id: contact.id };\n              })\n            );\n          });\n        });\n    }\n  }, [props.open]);\n  return (\n    <Modal open={props.open} size=\"mini\">\n      <Modal.Header>Contacts</Modal.Header>\n      <Modal.Content>\n        <List selection>\n          {contacts.map((contact) => {\n            return (\n              <List.Item\n                key={uniqid()}\n                onClick={(e) => {\n                  startPrivateChat(contact);\n                }}\n              >\n                {contact.name}\n              </List.Item>\n            );\n          })}\n        </List>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          onClick={() => {\n            setAddContactOpen(true);\n          }}\n          primary\n        >\n          Add Contact\n        </Button>\n        <Button\n          onClick={() => {\n            props.setOpenContacts(false);\n          }}\n        >\n          Close\n        </Button>\n      </Modal.Actions>\n      <Addcontact\n        db={props.db}\n        user={props.user}\n        contacts={contacts}\n        addContactOpen={addContactOpen}\n        setAddContactOpen={setAddContactOpen}\n      />\n    </Modal>\n  );\n};\n\nexport default Contacts;\n","import React, { useState } from \"react\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Modal, Form, Button, Segment, Message, List } from \"semantic-ui-react\";\n\nconst Addgroup = (props) => {\n  const [group, setGroup] = useState(\"\");\n  return (\n    <Modal open={props.open} size=\"mini\">\n      <Modal.Header>Add Group</Modal.Header>\n      <Modal.Content>\n        <Form onSubmit={() => {}}>\n          <Form.Input\n            fluid\n            icon=\"group\"\n            iconPosition=\"left\"\n            placeholder=\"Group name\"\n            onChange={(e) => {\n              setGroup(e.target.value);\n            }}\n          />\n        </Form>\n        <List></List>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          onClick={() => {\n            props.setAddGroup(false);\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            props.setGroupContacts(true);\n            props.setAddGroup(false);\n          }}\n          primary\n        >\n          Next\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default Addgroup;\n","import React, { useState, useEffect, useReducer } from \"react\";\n\nimport \"./App.css\";\n\nimport Nav from \"./Nav\";\nimport Main from \"./Main\";\nimport Login from \"./Login\";\nimport Approveadd from \"./Approveadd\";\nimport Contacts from \"./Contacts\";\nimport Addgroup from \"./Addgroup\";\nimport Groupcontacts from \"./Groupcontacts\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport {\n  Menu,\n  Icon,\n  Button,\n  Sidebar,\n  Segment,\n  Header,\n  Image,\n} from \"semantic-ui-react\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport Addcontact from \"./Addcontact\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCiemC3RJx8s3kHs4Y2SasrhG_epoQjEDw\",\n  authDomain: \"entropy-messenger.firebaseapp.com\",\n  databaseURL: \"https://entropy-messenger.firebaseio.com\",\n  projectId: \"entropy-messenger\",\n  storageBucket: \"entropy-messenger.appspot.com\",\n  messagingSenderId: \"739103714260\",\n  appId: \"1:739103714260:web:9f34197363bb3b2e4dc441\",\n  measurementId: \"G-WNTGXPFSRH\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nvar db = firebase.firestore();\nvar dbFunc = firebase.firestore;\n\nconst App = () => {\n  const [user, setUser] = useState();\n  const [name, setName] = useState();\n  const [chats, setChats] = useState([]);\n  const [chatIDs, setChatIDs] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [activeChat, setActiveChat] = useState();\n  const [loginOpen, setLoginOpen] = useState(true);\n  const [loginError, setLoginError] = useState(false);\n  const [loginErrorCode, setLoginErrorCode] = useState(\"\");\n  const [loginErrorMessage, setLoginErrorMessage] = useState(\"\");\n  const [approveAddOpen, setApproveAddOpen] = useState(false);\n  const [addRequests, setAddRequests] = useState([]);\n  const [openContacts, setOpenContacts] = useState(false);\n  const [addGroup, setAddGroup] = useState(false);\n  const [groupContacts, setGroupContacts] = useState(false);\n\n  const [visible, setVisible] = useState(false);\n\n  const [chatsData, chatsDataUpdate] = useReducer(\n    (state, action) => {\n      if (action.type === \"private\") {\n        let otherUserID = action.users.find((i) => i.id !== user).id;\n        let otherUserName = users.find((i) => i.userID === otherUserID);\n      }\n      return {\n        chats: state.chats\n          .filter((i) => i.chatID !== action.chatID)\n          .concat({\n            title: action.title,\n            type: action.type,\n            users: action.users,\n            chatID: action.chatID,\n          }),\n      };\n    },\n    { chats: [] }\n  );\n  const [chatsTrans, chatsTransUpdate] = useReducer(\n    (state, action) => {\n      return {\n        chats: state.chats\n          .filter((i) => i.chatID !== action.chatID)\n          .concat({ chatID: action.chatID, data: action.data }),\n      };\n    },\n    { chats: [] }\n  );\n  useEffect(() => {\n    if (user !== undefined) {\n      const query = db.collection(\"users\").doc(user);\n      query.get().then((doc) => {\n        setActiveChat(doc.data().activeChat);\n        const chatGets = doc\n          .data()\n          .chats.map((chat) => db.collection(\"chats\").doc(chat).get());\n        Promise.all(chatGets).then((results) => {\n          const userGets = results\n            .map((i) => i.data().users)\n            .flat()\n            .filter((i) => i.id !== user)\n            .map((i) => i.get());\n          Promise.all(userGets).then((users) => {\n            setUsers(\n              users.map((j) => {\n                return {\n                  name: j.data().name,\n                  email: j.data().email,\n                  userID: j.id,\n                };\n              })\n            );\n          });\n          setChats(\n            results.map((i) => {\n              return {\n                title: i.data().title,\n                type: i.data().type,\n                users: i.data().users,\n                chatID: i.id,\n              };\n            })\n          );\n        });\n      });\n    }\n  }, [user]);\n  const activeChatCallback = (chat) => {\n    setActiveChat(chat);\n    db.collection(\"users\").doc(user).set({ activeChat: chat }, { merge: true });\n  };\n  const googleLoginSubmitCallback = () => {\n    //Initialize Firebase Auth\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(function (result) {\n        const userRef = db.collection(\"users\").doc(result.user.uid);\n        userRef\n          .get()\n          .then((doc) => {\n            if (doc.exists) {\n              setUser(result.user.uid);\n              setName(result.user.displayName);\n              userRef.onSnapshot((snapshot) => {\n                handleUserUpdate(snapshot);\n              });\n            } else {\n              db.collection(\"users\").doc(result.user.uid).set(\n                {\n                  name: result.user.displayName,\n                  email: result.user.email,\n                  chats: [],\n                  contacts: [],\n                  activeChat: null,\n                  addrequests: [],\n                },\n                { merge: false }\n              );\n            }\n          })\n          .then(() => {\n            setLoginOpen(false);\n            setLoginError(false);\n          });\n      });\n  };\n  const handleUserUpdate = (snapshot) => {\n    handleAddRequests(snapshot.data().addrequests);\n    handleChats(snapshot.data().chats);\n  };\n  const handleChats = (chatIDs) => {\n    setChatIDs(chatIDs);\n  };\n  useEffect(() => {\n    chatIDs\n      .filter((i) => !chatsData.chats.find((j) => j.chatID === i))\n      .forEach((chatID) => {\n        db.collection(\"chats\")\n          .doc(chatID)\n          .onSnapshot((result) => {\n            chatsDataUpdate({\n              title: result.data().title,\n              type: result.data().type,\n              users: result.data().users,\n              chatID: result.id,\n            });\n          });\n        const query = db.collection(chatID).orderBy(\"date\", \"asc\");\n        query.onSnapshot((querySnapshot) => {\n          const data = querySnapshot.docs.map((doc) => doc.data());\n          Promise.resolve().then(() => {\n            chatsTransUpdate({ chatID: chatID, data: data });\n          });\n        });\n      });\n  }, [chatIDs]);\n  const handleAddRequests = (requests) => {\n    if (requests.length > 0) {\n      const contactGets = requests.map((request) => request.get());\n      Promise.all(contactGets).then((results) => {\n        setAddRequests(results);\n      });\n      setApproveAddOpen(true);\n    }\n  };\n  const loginSubmitCallback = (email, password) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        setUser(result.user.uid);\n        db.collection(\"users\")\n          .doc(result.user.uid)\n          .get()\n          .then((doc) => {\n            setName(doc.data().name);\n          });\n      })\n      .then(() => {\n        setLoginOpen(false);\n        setLoginError(false);\n      })\n      .catch((error) => {\n        setLoginError(true);\n        setLoginErrorCode(error.code);\n        setLoginErrorMessage(error.message);\n      });\n  };\n  const createGroupChat = (e) => {\n    db.collection(\"chats\")\n      .add({\n        title: e.target.title.value,\n        type: \"group\",\n        users: [db.doc(\"/users/\" + user)],\n      })\n      .then((result) => {\n        db.collection(result.id).add({\n          name: name,\n          author: db.doc(\"/users/\" + user),\n          date: dbFunc.Timestamp.now(),\n          content: \"This is the first message.\",\n        });\n        db.collection(\"users\")\n          .doc(user)\n          .set(\n            {\n              chats: chats.map((i) => i.chatID).concat(result.id),\n            },\n            { merge: true }\n          );\n      });\n  };\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        height: \"100%\",\n        width: \"100%\",\n      }}\n    >\n      <Sidebar.Pushable>\n        <Sidebar\n          as={Menu}\n          animation=\"overlay\"\n          icon=\"labeled\"\n          inverted\n          vertical\n          visible={visible}\n          width=\"thin\"\n        >\n          <Menu.Item\n            as=\"a\"\n            onClick={() => {\n              setAddGroup(true);\n              setVisible(false);\n            }}\n          >\n            <Icon name=\"group\" />\n            New Group\n          </Menu.Item>\n          <Menu.Item\n            as=\"a\"\n            onClick={() => {\n              setOpenContacts(true);\n              setVisible(false);\n            }}\n          >\n            <Icon name=\"user\" />\n            Contacts\n          </Menu.Item>\n          <Menu.Item as=\"a\">\n            <Icon name=\"cog\" />\n            Settings\n          </Menu.Item>\n          <Menu.Item as=\"a\">\n            <Icon name=\"moon\" />\n            Night Mode\n          </Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={visible}>\n          {\" \"}\n          <div\n            style={{\n              position: \"absolute\",\n              width: \"30%\",\n              height: \"100%\",\n              overflowY: \"auto\",\n            }}\n          >\n            <Nav\n              db={db}\n              dbFunc={dbFunc}\n              user={user}\n              name={name}\n              users={users}\n              chats={chatsData.chats}\n              chatsTrans={chatsTrans}\n              setActiveChat={activeChatCallback}\n              activeChat={activeChat}\n              setVisible={setVisible}\n            />\n          </div>\n          <div\n            style={{\n              position: \"fixed\",\n              left: \"30%\",\n              width: \"70%\",\n              height: \"100%\",\n            }}\n          >\n            <Main\n              db={db}\n              dbFunc={dbFunc}\n              user={user}\n              name={name}\n              activeChat={activeChat}\n              chats={chats}\n              users={users}\n              chatsTrans={chatsTrans}\n            />\n          </div>\n          <Login\n            open={loginOpen}\n            loginSubmit={loginSubmitCallback}\n            googleLoginSubmit={googleLoginSubmitCallback}\n            db={db}\n            loginError={loginError}\n            loginErrorCode={loginErrorCode}\n            loginErrorMessage={loginErrorMessage}\n          />\n          <Approveadd\n            db={db}\n            user={user}\n            approveAddOpen={approveAddOpen}\n            setApproveAddOpen={setApproveAddOpen}\n            addRequests={addRequests}\n            setAddRequests={setAddRequests}\n          />\n          <Contacts\n            open={openContacts}\n            db={db}\n            user={user}\n            setOpenContacts={setOpenContacts}\n            chats={chats}\n            setActiveChat={setActiveChat}\n            dbFunc={dbFunc}\n            name={name}\n          />\n          <Addgroup\n            open={addGroup}\n            setAddGroup={setAddGroup}\n            setGroupContacts={setGroupContacts}\n          />\n          <Groupcontacts\n            open={groupContacts}\n            setGroupContacts={setGroupContacts}\n            user={user}\n            db={db}\n          />\n        </Sidebar.Pusher>\n      </Sidebar.Pushable>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}